library("discretization")
library("arules")
setwd("C:/Users/Philip/Downloads/DM Project/student")
x<-read.csv(file="student-mat.csv",sep=";")
x<-(x[,c(1,2,4:29)])
for(i in 1:dim(x)[2])
{x[,i]<-as.factor(x[,i])}
rules<-apriori(x[1:50,],parameter = list(minlen=2, maxlen=2, supp=0.1, conf=0.8))
inspect(rules)
rules<-apriori(x,parameter = list(minlen=2, maxlen=2, supp=0.1, conf=0.8))
inspect(rules)
rules<-apriori(x,parameter = list(minlen=2, maxlen=3, supp=0.1, conf=0.8))
inspect(rules)
subset.matrix <- is.subset(rules.sorted, rules.sorted)
subset.matrix[lower.tri(subset.matrix, diag=T)] <- NA
redundant <- colSums(subset.matrix, na.rm=T) >= 1
which(redundant)
# remove redundant rules
rules.pruned <- rules.sorted[!redundant]
inspect(rules.pruned
rules.sorted <- sort(rules, by="lift")
subset.matrix <- is.subset(rules.sorted, rules.sorted)
subset.matrix[lower.tri(subset.matrix, diag=T)] <- NA
redundant <- colSums(subset.matrix, na.rm=T) >= 1
which(redundant)
# remove redundant rules
rules.pruned <- rules.sorted[!redundant]
inspect(rules.pruned)
subset.matrix <- is.subset(rules.sorted, rules.sorted)
rules.sorted <- sort(rules, by="lift")
subset.matrix
rules.sorted
inspect(rules)
rules.sorted <- sort(rules, by="lift")
subset.matrix <- is.subset(rules.sorted, rules.sorted)
subset.matrix[lower.tri(subset.matrix, diag=T)] <- NA
redundant <- colSums(subset.matrix, na.rm=T) >= 1
which(redundant)
rules.pruned <- rules.sorted[!redundant]
inspect(rules.pruned)
subset(rules.sorted,rules.sorted)
rules.sorted <- sort(rules, by="lift")
rules.sorted
subset.matrix
colnames(subset.matrix)
rownames(subset.matrix)
dim(subset.matrix)
is.subset(c(0,1,1),c(1,1))
is.subset(c(0,1,1),c(1,1))
subset.matrix[1,1]
subset.matrix[2,1]
subset.matrix[2,2]
subset.matrix[6000,6000]
subset.matrix <- is.subset(rules.sorted, rules.sorted)
subset.matrix[6000,6000]
subset.matrix[2,2]
subset.matrix[2,1]
subset.matrix[1,1]
inspect(rules.pruned)
inspect(sort(rules.pruned,by="supp"))
inspect(sort(rules.pruned,by="sup"))
names(rules.sorted)
colnames(rules.sorted)
rules.sorted[1:2,]
rules.sorted[[1]]
rules.sorted[1]
rules.sorted[1]@sup
rules.sorted[1]@support
rules.sorted[1]@
saoidj
rule[1,
]
rules[1,]
rules
inspect(rules)
inspect(rules[1:10,])
inspect(sort(rules.pruned,by="support"))
inspect(sort(rules.pruned,by="support", decreasing = FALSE))
library("discretization")
library("arules")
setwd("C:/Users/Philip/Downloads/DM Project/student")
x<-read.csv(file="student-mat.csv",sep=";")
x<-(x[,c(1,2,4:29)])
for(i in 1:dim(x)[2])
{x[,i]<-as.factor(x[,i])}
rules<-apriori(x,parameter = list(minlen=3, maxlen=3, supp=0.1, conf=0.8))
inspect(rules)
# pruning
rules.sorted <- sort(rules, by="lift")
subset.matrix <- is.subset(rules.sorted, rules.sorted)
subset.matrix[lower.tri(subset.matrix, diag=T)] <- NA
redundant <- colSums(subset.matrix, na.rm=T) >= 1
which(redundant)
# remove redundant rules
rules.pruned <- rules.sorted[!redundant]
inspect(sort(rules.pruned,by="support", decreasing = FALSE))
library("discretization")
library("arules")
setwd("C:/Users/Philip/Downloads/DM Project/student")
x<-read.csv(file="student-mat.csv",sep=";")
x<-(x[,c(1,2,4:29)])
for(i in 1:dim(x)[2])
{x[,i]<-as.factor(x[,i])}
rules<-apriori(x,parameter = list(minlen=2, maxlen=3, supp=0.1, conf=0.8))
inspect(rules)
# pruning
rules.sorted <- sort(rules, by="lift")
subset.matrix <- is.subset(rules.sorted, rules.sorted)
subset.matrix[lower.tri(subset.matrix, diag=T)] <- NA
redundant <- colSums(subset.matrix, na.rm=T) >= 1
which(redundant)
# remove redundant rules
rules.pruned <- rules.sorted[!redundant]
inspect(sort(rules.pruned,by="support", decreasing = FALSE))
Ds<-NULL
for( i in 1:dim(x)[2])
{
  cc<-levels(x[,i])
  z<-matrix(0,dim(x)[1],length(cc))
  colnames(z)<-cc
  for(j in cc)
  {
    z[,j]<-1*(x[,i]==j)
  }
  Ds<-cbind(Ds,z)
}
Ds
dim(Ds)
write.csv(Ds,file="Binarized.csv")
write.csv(Ds,file="C:/Users/Philip/Downloads/DM Project/Binarized.csv")
Ds<-NULL
for( i in 1:dim(x)[2])
{
  cc<-levels(x[,i])
  z<-matrix(0,dim(x)[1],length(cc))
  colnames(z)<-cc
  for(j in cc)
  {
    z[,j]<-1*(x[,i]==j)
    colnames(z)[j]<-colnames(x)[i]
  }
  Ds<-cbind(Ds,z)
}
Ds<-NULL
n<-NULL
for( i in 1:dim(x)[2])
{
  cc<-levels(x[,i])
  z<-matrix(0,dim(x)[1],length(cc))
  colnames(z)<-cc
  for(j in cc)
  {
    z[,j]<-1*(x[,i]==j)
  }
  n<-c(n,rep(colnames(x)[i],length(cc)))
  Ds<-cbind(Ds,z)
}
colnames(Ds)<-n
write.csv(Ds,file="C:/Users/Philip/Downloads/DM Project/Binarized.csv")
write.csv(Ds,file="C:/Users/Philip/Downloads/DM Project/Binarized.csv")
Ds<-NULL
n<-NULL
for( i in 1:dim(x)[2])
{
  cc<-levels(x[,i])
  z<-matrix(0,dim(x)[1],length(cc))
  colnames(z)<-cc
  for(j in cc)
  {
    z[,j]<-1*(x[,i]==j)
    n<-c(n,paste(colnames(x)[i],j,sep="="))
  }
  Ds<-cbind(Ds,z)
}
colnames(Ds)<-n
write.csv(Ds,file="C:/Users/Philip/Downloads/DM Project/Binarized.csv")
Ds<-NULL
n<-NULL
for( i in 1:dim(x)[2])
{
  cc<-levels(x[,i])
  z<-matrix(0,dim(x)[1],length(cc))
  colnames(z)<-cc
  for(j in cc)
  {
    z[,j]<-1*(x[,i]==j)
    n<-c(n,paste(colnames(x)[i],j,sep="="))
  }
  Ds<-cbind(Ds,z)
}
colnames(Ds)<-n
write.csv(Ds,file="C:/Users/Philip/Downloads/DM Project/Binarized.csv")
zz<-vector(list,dim(x)[1])
for(i in 1:dim(x)[1])
{zz[[i]]<-colnames(which(x[i,]==1))}
zz<-vector(list,dim(x)[1])
zz<-vector("list",dim(x)[1])
for(i in 1:dim(x)[1])
{zz[[i]]<-colnames(which(x[i,]==1))}
zz[[1]]
zz[[2]]
zz<-vector("list",dim(x)[1])
for(i in 1:dim(x)[1])
{zz[[i]]<-colnames(which(Ds[i,]==1))
}
zz[[1]]
zz[[2]]
i
Ds[i,]==1
which(Ds[i,]==1)
colnames(which(Ds[i,]==1))
colnames(Ds)[which(Ds[i,]==1)]
zz<-vector("list",dim(x)[1])
for(i in 1:dim(x)[1])
{zz[[i]]<-colnames(Ds)[which(Ds[i,]==1)]
}
zz[[1]]
zz<-vector("list",dim(x)[1])
for(i in 1:dim(x)[1])
{
   xc<-colnames(Ds)[which(Ds[i,]==1)]
   zz[i]<-c(i,length(xc),xc)
}
write.csv(zz,file="C:/Users/Philip/Downloads/DM Project/Final.csv")
wrnings()
waarnings()
warnings()
zz<-vector("list",dim(x)[1])
for(i in 1:dim(x)[1])
{
   xc<-colnames(Ds)[which(Ds[i,]==1)]
   zz[[i]]<-c(i,length(xc),xc)
}
write.csv(zz,file="C:/Users/Philip/Downloads/DM Project/Final.csv")
zz[[1]]
write.csv(t(zz),file="C:/Users/Philip/Downloads/DM Project/Final.csv")
t(zz)
write.csv(t(as.matrix(zz)),file="C:/Users/Philip/Downloads/DM Project/Final.csv")
write.csv(zz,file="C:/Users/Philip/Downloads/DM Project/Final.csv")
Ds[1,]
rowSums(Ds)
zz<-t(read.csv("Final.csv"))
zty<-t(read.csv(file="Final.csv"))
zz
zz<-vector("list",dim(x)[1])
for(i in 1:dim(x)[1])
{
   xc<-colnames(Ds)[which(Ds[i,]==1)]
   zz[[,i]]<-c(i,length(xc),xc)
}
zz<-matrix(0,dim(x)[1],28)
for(i in 1:dim(x)[1])
{
   xc<-colnames(Ds)[which(Ds[i,]==1)]
   zz[i,]<-c(i,length(xc),xc)
}
zz<-matrix(0,dim(x)[1],30)
for(i in 1:dim(x)[1])
{
   xc<-colnames(Ds)[which(Ds[i,]==1)]
   zz[i,]<-c(i,length(xc),xc)
}
write.csv(zz,file="C:/Users/Philip/Downloads/DM Project/Final.csv")
q()
